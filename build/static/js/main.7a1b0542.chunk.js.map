{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Constants.js","Components/Utils/ToggleDraggable.js","Model/Crash.js","Model/Limbo.js","Model/Dice.js","Contexts/RecorderProvider.js","Components/Utils/ExportData.js","Components/Main.js","Components/Header.js","Components/Layout.js","Components/Common/HistoryPayout.js","Components/Common/PayoutComparison.js","Components/Common/Targets.js","Components/Limbo/RecentStats.js","Components/Limbo/Index.js","Components/Dice/RecentStat.js","Components/Dice/Index.js","Components/Utils/CrashResults.js","Components/Crash/RecentStats.js","Components/Crash/Index.js","Components/Routes.js","Components/Utils/ErrorLog.js","Components/Modal.js","Model/Index.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","disableDrag","setDisableDrag","hideView","setHideView","useEffect","window","addEventListener","event","source","data","type","value","Provider","getExtensionId","postMessage","setDisable","bool","ToggleDraggable","contextData","useContext","className","title","onClick","CrashModel","store","storeConfig","keyPath","autoIncrement","storeSchema","name","keypath","options","unique","LimboModel","DiceModel","RecorderContext","RecorderProvider","crashDB","useIndexedDB","limboDB","diceDB","currentCrash","setCurrentCrash","list","count","crashData","setCrashData","limboData","setLimboData","diceData","setDiceData","handleCrashResult","useCallback","newData","recentHash","prevState","handleLimboResult","handleDiceResult","dataSetSuccessful","dataSetFailed","error","result","crashObject","stake_id","id","stake_crashpoint","crashpoint","stake_hash","hash","stake_seed","seed","stake_leaderboard","leaderboard","stake_status","status","stake_startTime","startTime","stake_multiplier","multiplier","stake_nextRoundIn","nextRoundIn","createdAt","Date","now","add","then","limboObject","stake_active","active","stake_amount","amount","stake_currency","currency","stake_amountMultiplier","amountMultiplier","stake_game","game","stake_payout","payout","stake_payoutMultiplier","payoutMultiplier","stake_state","state","stake_updatedAt","updatedAt","stake_user","user","diceObject","setDataByType","a","crashIds","limboIds","diceIds","getAll","crashFromDB","lastestHash","length","crachCount","filter","c","hasOwnProperty","Object","values","limboFromDB","limboCount","diceFromDB","diceCount","ExportData","seedData","key","dataToString","header","k","tempHeader","keys","isNestedObject","Array","isArray","columnNames","j","push","processRow","row","finalVal","innerValue","toString","toLocaleString","replace","search","csvFile","i","tmpArr","currentDateFormat","d","getFullYear","getMonth","getDate","getHours","getMinutes","join","downloadType","blob","optionKey","fileName","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","console","log","exportType","option","json","JSON","stringify","Blob","csvInput","role","map","item","Main","Consumer","Routes","r","childRoutes","cr","Icon","icon","to","path","toUpperCase","Header","exact","activeClassName","Layout","FormartHistory","lastHistory","highLightX","customPayoutCalc","historyResults","Math","floor","HistoryPayout","history","len","val","index","FormatPayout","targets","results","targetResults","target","hits","expectedHitRate","parseFloat","toFixed","hitRate","expectedHits","expectedHitsVsHits","expectedHitRateVsHitRate","sampleSize","PayoutComparison","DrawPayoutTable","chunk","multi","init_count","multi_count","headElem","col","colSpan","res","round","RenderTargets","valuesList","slice","targetList","RecentStats","Limbo","Dice","RecentStat","CrashResults","clientSeed","serverSeed","fisrtNonce","lastNonce","this","nonces","from","v","Promise","resolve","reject","CryptoJS","algo","HMAC","create","SHA256","finalize","parseInt","substr","max","pow","nonce_len","lastHash","nonce","gamehash","generateResults","currentResult","setServerSeed","firstNonce","setResults","setTargetResults","setHistoryResults","isLoading","setLoading","simulateTargets","onChange","placeholder","disabled","Crash","component","GiAmplitude","GiDiceSixFacesSix","GiCrackedBallDunk","ErrorLog","props","errorInfo","setState","style","whiteSpace","componentStack","React","Component","Modal","Number","MAX_SAFE_INTEGER","maxWidth","setMaxWidth","maxHeight","setMaxHeight","clientWidth","clientHeight","display","alignItems","justifyContent","hasDraggedWindowPosition","default","width","height","disableDragging","DBConfig","version","objectStoresMeta","initDB","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7a1b0542.chunk.js","sourcesContent":["\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 100, y: 100 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { createContext, useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\nimport { EXTENSION_ID_RESULT, GET_EXTENSION_ID, TOGGLE_POPUP_VIEW } from '../Constants'\n\nexport const ModalContext = createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n  const [disableDrag, setDisableDrag] = useState(true);\n  const [hideView, setHideView] = useState(false);\n\n  function getExtensionId() {\n    window.postMessage({ type: GET_EXTENSION_ID }, \"*\");\n  }\n\n  function setDisable(bool){\n    setDisableDrag(bool)\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if(event.data.type !== undefined){\n        switch(event.data.type){\n          case EXTENSION_ID_RESULT:\n              setExtensionId(event.data.extensionId);\n            break;\n          case TOGGLE_POPUP_VIEW:\n              setHideView(event.data.value)\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n        disableDrag,\n        setDisable,\n        hideView\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","export const GET_EXTENSION_ID = \"GET_EXTENSION_ID\";\nexport const EXTENSION_ID_RESULT = \"EXTENSION_ID_RESULT\";\nexport const TOGGLE_POPUP_VIEW = \"TOGGLE_POPUP_VIEW\";\nexport const SET_SEED_DATA = \"SET_SEED_DATA\";\nexport const RECORD_DICE = \"RECORD_DICE\";\nexport const RECORD_LIMBO = \"RECORD_LIMBO\";\nexport const RECORD_CRASH = \"RECORD_CRASH\";\nexport const LIMBO = \"LIMBO\";\nexport const DICE = \"DICE\";\nexport const CRASH = \"CRASH\";","import React, { useContext } from 'react';\nimport { ModalContext } from '../../Contexts/ModalProvider';\nimport { GiArrowCursor } from 'react-icons/gi';\nimport { RiDragMove2Fill } from 'react-icons/ri';\n\nconst ToggleDraggable = () => {\n    const contextData = useContext(ModalContext)\n    return (\n        <div>\n            <div className=\"flex flex-grid justify-center items-center\">\n                <div className=\"flex justify-center items-center\">\n                    <span title=\"Enable Draggable\">\n                        <RiDragMove2Fill \n                            className=\"h-4 w-4 text-gray-500\"\n                        />\n                    </span>\n                </div>\n                <div className={(\"cursor-pointer w-12 h-5 flex items-center bg-gray-300 rounded-full mx-3 px-1 \")+(contextData.disableDrag ? 'bg-indigo-400' : '')} onClick={() => contextData.setDisable(!contextData.disableDrag)}>\n                    <div className={(\"bg-white w-3 h-3 rounded-full shadow-md transform \")+(contextData.disableDrag ? 'translate-x-7' : '' )}></div>\n                </div>\n                <div className=\"flex justify-center items-center\">\n                    <span title=\"Disable Draggable\">\n                        <GiArrowCursor \n                            className=\"h-4 w-4 text-gray-400\"\n                        />\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ToggleDraggable;\n","export const CrashModel = {\n    store: 'crash',\n    storeConfig: { keyPath: 'id', autoIncrement: true },\n    storeSchema: [\n        { name: 'stake_id', keypath: 'stake_id', options: { unique: false } },\n        { name: 'stake_crashpoint', keypath: 'stake_crashpoint', options: { unique: false } },\n        { name: 'stake_hash', keypath: 'stake_hash', options: { unique: false } },\n        { name: 'stake_seed', keypath: 'stake_seed', options: { unique: false } },\n        { name: 'stake_leaderboard', keypath: 'stake_leaderboard', options: { unique: false } },\n        { name: 'stake_status', keypath: 'stake_status', options: { unique: false } },\n        { name: 'stake_startTime', keypath: 'stake_startTime', options: { unique: false } },\n        { name: 'stake_multiplier', keypath: 'stake_multiplier', options: { unique: false } },\n        { name: 'stake_nextRoundIn', keypath: 'stake_nextRoundIn', options: { unique: false } },\n        { name: 'createdAt', keypath: 'createdAt', options: { unique: false } }\n    ]\n}","export const LimboModel = {\n    store: 'limbo',\n    storeConfig: { keyPath: 'id', autoIncrement: true },\n    storeSchema: [\n        { name: 'stake_id', keypath: 'stake_id', options: { unique: false } },\n        { name: 'stake_active', keypath: 'stake_active', options: { unique: false } },\n        { name: 'stake_amount', keypath: 'stake_amount', options: { unique: false } },\n        { name: 'stake_currency', keypath: 'stake_currency', options: { unique: false } },\n        { name: 'stake_amountMultiplier', keypath: 'stake_amountMultiplier', options: { unique: false } },\n        { name: 'stake_game', keypath: 'stake_game', options: { unique: false } },\n        { name: 'stake_payout', keypath: 'stake_payout', options: { unique: false } },\n        { name: 'stake_payoutMultiplier', keypath: 'stake_payoutMultiplier', options: { unique: false } },\n        { name: 'stake_state', keypath: 'stake_state', options: { unique: false } },\n        { name: 'stake_updatedAt', keypath: 'stake_updatedAt', options: { unique: false } },\n        { name: 'stake_user', keypath: 'stake_user', options: { unique: false } },\n        { name: 'createdAt', keypath: 'createdAt', options: { unique: false } }\n    ]\n}\n","export const DiceModel = {\n    store: 'dice',\n    storeConfig: { keyPath: 'id', autoIncrement: true },\n    storeSchema: [\n        { name: 'stake_id', keypath: 'stake_id', options: { unique: false } },\n        { name: 'stake_active', keypath: 'stake_active', options: { unique: false } },\n        { name: 'stake_amount', keypath: 'stake_amount', options: { unique: false } },\n        { name: 'stake_currency', keypath: 'stake_currency', options: { unique: false } },\n        { name: 'stake_amountMultiplier', keypath: 'stake_amountMultiplier', options: { unique: false } },\n        { name: 'stake_game', keypath: 'stake_game', options: { unique: false } },\n        { name: 'stake_payout', keypath: 'stake_payout', options: { unique: false } },\n        { name: 'stake_payoutMultiplier', keypath: 'stake_payoutMultiplier', options: { unique: false } },\n        { name: 'stake_state', keypath: 'stake_state', options: { unique: false } },\n        { name: 'stake_updatedAt', keypath: 'stake_updatedAt', options: { unique: false } },\n        { name: 'stake_user', keypath: 'stake_user', options: { unique: false } },\n        { name: 'createdAt', keypath: 'createdAt', options: { unique: false } }\n    ]\n}","import React, { createContext, useEffect, useState, useCallback } from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\nimport { CrashModel } from '../Model/Crash';\nimport { LimboModel } from '../Model/Limbo';\nimport { DiceModel } from '../Model/Dice';\nimport { SET_SEED_DATA, RECORD_CRASH, RECORD_DICE, RECORD_LIMBO } from '../Constants'\n\nexport const RecorderContext = createContext({});\n\nconst RecorderProvider = ({ children }) => {\n    const crashDB = useIndexedDB(CrashModel.store);\n    const limboDB = useIndexedDB(LimboModel.store);\n    const diceDB = useIndexedDB(DiceModel.store);\n\n    const [currentCrash, setCurrentCrash] = useState('3de7306e8de178b5f4de0a6eac3635c29b6143d638f8ecdb4bf691e8f9a2ee6a')\n\n    const [crashData, setCrashData] = useState({\n        list: [],\n        count: 0\n    })\n    const [limboData, setLimboData] = useState({\n        list: [],\n        count: 0\n    })\n    const [diceData, setDiceData] = useState({\n        list: [],\n        count: 0\n    })\n\n    const handleCrashResult = useCallback((newData, count, recentHash) => {\n        setCrashData((prevState) => ({\n            ...prevState,\n            list: [...prevState.list, ...newData],\n            count: prevState.count + count\n        }))\n        if(recentHash !== null){\n            setCurrentCrash(recentHash)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [crashData, currentCrash])\n\n    const handleLimboResult = useCallback((newData, count) => {\n        setLimboData((prevState) => ({\n            ...prevState,\n            list: [...prevState.list, ...newData],\n            count: prevState.count + count\n        }))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [limboData])\n\n    const handleDiceResult = useCallback((newData, count) => {\n        setDiceData((prevState) => ({\n            ...prevState,\n            list: [...prevState.list, ...newData],\n            count: prevState.count + count\n        }))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [crashData])\n\n    function setDataByType(data) {\n        switch(data.type){\n            case RECORD_CRASH:\n                if(data.result){\n                    const crashObject = {\n                        stake_id: data.result.id\n                        , stake_crashpoint: data.result.crashpoint\n                        , stake_hash: data.result.hash\n                        , stake_seed: data.result.seed\n                        , stake_leaderboard: data.result.leaderboard\n                        , stake_status: data.result.status\n                        , stake_startTime: data.result.startTime\n                        , stake_multiplier: data.result.multiplier\n                        , stake_nextRoundIn: data.result.nextRoundIn\n                        , createdAt: Date.now()\n                    }\n                    crashDB.add(crashObject).then(\n                        event => {\n                            // setCurrentCrash(data.result.hash.hash)\n                            handleCrashResult([crashObject], 1, data.result.hash.hash)\n                            dataSetSuccessful(event)\n                        },\n                        error => dataSetFailed(error)\n                    );\n                }\n                break;\n            case RECORD_LIMBO:\n                if(data.result){\n                    const limboObject = {\n                        stake_id: data.result.id\n                        , stake_active: data.result.active\n                        , stake_amount: data.result.amount\n                        , stake_currency: data.result.currency\n                        , stake_amountMultiplier: data.result.amountMultiplier\n                        , stake_game: data.result.game\n                        , stake_payout: data.result.payout\n                        , stake_payoutMultiplier: data.result.payoutMultiplier\n                        , stake_state: data.result.state\n                        , stake_updatedAt: data.result.updatedAt\n                        , stake_user: data.result.user\n                        , createdAt: Date.now()\n                    }\n                    limboDB.add(limboObject).then(\n                        event => {\n                            handleLimboResult([limboObject], 1)\n                            dataSetSuccessful(event)\n                        },\n                        error => dataSetFailed(error)\n                    );\n                }\n                break;\n            case RECORD_DICE:\n                if(data.result){\n                    const diceObject = {\n                        stake_id: data.result.id\n                        , stake_active: data.result.active\n                        , stake_amount: data.result.amount\n                        , stake_currency: data.result.currency\n                        , stake_amountMultiplier: data.result.amountMultiplier\n                        , stake_game: data.result.game\n                        , stake_payout: data.result.payout\n                        , stake_payoutMultiplier: data.result.payoutMultiplier\n                        , stake_state: data.result.state\n                        , stake_updatedAt: data.result.updatedAt\n                        , stake_user: data.result.user\n                        , createdAt: Date.now()\n                    }\n                    diceDB.add(diceObject).then(\n                        event => {\n                            handleDiceResult([diceObject], 1)\n                            dataSetSuccessful(event)\n                        },\n                        error => dataSetFailed(error)\n                    );\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    const dataSetSuccessful = (event) => {\n        // console.log('Bet Recorded: ', event);\n    }\n\n    const dataSetFailed = (error) => {\n        // console.log(error);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"message\", function(event) {\n          if (event.source !== window) return;\n          if(event.data.type !== undefined){\n            switch(event.data.type){\n              case SET_SEED_DATA:\n                  setDataByType(event.data.data);\n                break;\n              default:\n                break;\n            }\n          }\n        });\n\n        (async function() {\n            let crashIds = {}, limboIds = {}, diceIds = {};\n            await crashDB.getAll().then(crashFromDB => {\n                const lastestHash = (crashFromDB || []).length - 1;\n                const crachCount = (crashFromDB.filter(c => {\n                    return crashIds.hasOwnProperty(c.stake_id) ? false : (crashIds[c.stake_id] = c);\n                }) || []).length;\n                setCrashData((prevState) => ({\n                    ...prevState,\n                    list: [...prevState.list, ...Object.values(crashIds)],\n                    count: prevState.count + crachCount\n                }));\n                if(lastestHash > -1 && crashFromDB[lastestHash]?.hash?.hash !== undefined){\n                    setCurrentCrash(crashFromDB[lastestHash].hash.hash);\n                }\n            });\n            await limboDB.getAll().then(limboFromDB => {\n                const limboCount = (limboFromDB.filter(c => {\n                    return limboIds.hasOwnProperty(c.stake_id) ? false : (limboIds[c.stake_id] = c);\n                }) || []).length;\n                setLimboData((prevState) => ({\n                    ...prevState,\n                    list: [...prevState.list, ...Object.values(limboIds)],\n                    count: prevState.count + limboCount\n                }));\n            });\n            await diceDB.getAll().then(diceFromDB => {\n                const diceCount = (diceFromDB.filter(c => {\n                    return diceIds.hasOwnProperty(c.stake_id) ? false : (diceIds[c.stake_id] = c);\n                }) || []).length;\n                setDiceData((prevState) => ({\n                    ...prevState,\n                    list: [...prevState.list, ...Object.values(diceIds)],\n                    count: prevState.count + diceCount\n                }));\n            });\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <RecorderContext.Provider value={{\n            currentCrash: currentCrash,\n            setCurrentCrash: setCurrentCrash,\n            crashData: crashData,\n            diceData: diceData,\n            limboData: limboData\n        }}>\n          {children}\n        </RecorderContext.Provider>\n      );\n};\n    \nexport default RecorderProvider;","import React, { Fragment, useState } from 'react';\nimport { RiArrowDropDownLine } from 'react-icons/ri';\nimport { GrDocumentCsv } from 'react-icons/gr';\nimport { VscJson } from 'react-icons/vsc';\n\nconst ExportData = ({ seedData, type }) => {\n    const [options] = useState([\n        {\n            key: 'json',\n            name: 'JSON'\n        },\n        {\n            key: 'csv',\n            name: 'CSV'\n        },\n    ])\n\n    const dataToString = async(data, header = true) => {\n        if (data.length === 0) {\n            return '';\n        }\n\n        const tempHeader = Object.keys(data[0]);\n\n        const isNestedObject = (value) => {\n            return typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null\n        }\n\n        let columnNames = []\n\n        for(let k in tempHeader){\n            if(isNestedObject(data[0][tempHeader[k]])){\n                for(let j in data[0][tempHeader[k]]){\n                    columnNames.push(tempHeader[k] +'_'+ j)\n                }\n            }\n            else if(!Array.isArray(data[0][tempHeader[k]])){\n                columnNames.push(tempHeader[k])\n            }\n        }\n\n        const processRow = (row) => {\n            var finalVal = '';\n            for (var j = 0; j < row.length; j++) {\n                var innerValue = row[j] === null ? '' : (row[j] || \"\").toString();\n                if (row[j] instanceof Date) {\n                    innerValue = row[j].toLocaleString();\n                };\n                var result = innerValue.replace(/\"/g, '\"\"');\n                if (result.search(/(\"|,|\\n)/g) >= 0)\n                    result = '\"' + result + '\"';\n                if (j > 0)\n                    finalVal += ',';\n                finalVal += result;\n            }\n            return finalVal + '\\n';\n        }\n        \n        let csvFile = '';\n\n        if (header) {\n            csvFile += processRow(columnNames);\n        }\n        \n        for (var i = 0; i < data.length; i++) {\n            let tmpArr = [], row = data[i]\n            for(let k in tempHeader){\n                if(isNestedObject(row[tempHeader[k]])){\n                    for(let j in row[tempHeader[k]]){\n                      tmpArr.push(row[tempHeader[k]][j])\n                    }\n                }\n                else if(!Array.isArray(row[tempHeader[k]])){\n                    tmpArr.push(row[tempHeader[k]])\n                }\n            }\n            csvFile += processRow(tmpArr);\n        }\n\n        return csvFile\n    }\n\n    const currentDateFormat = () => {\n        const d = new Date();\n        return [d.getFullYear(), (d.getMonth()+1), d.getDate(), \"__\", d.getHours(), d.getMinutes()].join(\"\");\n    }\n    \n    const downloadType = async(blob, optionKey, fileName) => {\n        try{\n            const href = await URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = href;\n            link.download = fileName + \".\" + optionKey;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            return true;\n        }\n        catch(err){\n            console.log('Failed to download', err)\n        }\n    }\n\n    const exportType = async(option) => {\n        const fileName = type+\"_export_\"+currentDateFormat()\n        let blob = ''\n        switch(option.key){\n            case 'json':\n                const json = JSON.stringify(seedData);\n                blob = new Blob([json],{type:'application/json'});\n                break;\n            case 'csv':\n                const csvInput = await dataToString(seedData);\n                blob = new Blob([csvInput],{type:'text/csv;charset=utf-8;'});\n                break;\n            default:\n                break;\n        }\n        await downloadType(blob, option.key, fileName);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"relative inline-block text-left dropdown mt-3\">\n                <span className=\"rounded-md shadow-sm\">\n                    <button type=\"button\" className=\"inline-flex justify-center w-full px-4 py-2 text-sm font-medium leading-5 text-white transition duration-150 ease-in-out bg-indigo-400 border border-gray-300 rounded-md hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800\"aria-haspopup=\"true\" aria-expanded=\"true\" aria-controls=\"headlessui-menu-items-117\">\n                        Export\n                        <RiArrowDropDownLine className=\"-mr-1 ml-2 h-5 w-5\"/>\n                    </button>\n                </span>\n                <div className=\"opacity-0 invisible dropdown-menu transition-all duration-300 transform origin-top-right -translate-y-2 scale-95\">\n                    <div className=\"absolute right-0 w-28 mt-2 origin-top-right bg-white border border-gray-200 divide-y divide-gray-100 rounded-md shadow-lg outline-none\" aria-labelledby=\"headlessui-menu-button-1\" id=\"headlessui-menu-items-117\" role=\"menu\">\n                        <div className=\"py-1\" role=\"none\">\n                            {options.map((item) => (\n                                <button type=\"button\" onClick={async () => exportType(item)} key={item.key} className=\"text-gray-700 flex justify-between w-full px-2 py-1 text-sm leading-5 text-left\" role=\"menuitem\" id={\"menu-item_\"+item.key}>\n                                    {(item.key === 'json' ? <VscJson /> : ( item.key === 'csv' ? <GrDocumentCsv /> : ''))} {item.name}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ExportData;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Routes from '../Components/Routes';\nimport ToggleDraggable from '../Components/Utils/ToggleDraggable';\nimport { RecorderContext } from '../Contexts/RecorderProvider';\nimport ExportData from './Utils/ExportData';\n\n\nconst Main = () => {\n\n    const exportType = (data, type) => {\n        if(data?.count > 0){\n            return <ExportData seedData={data.list} type={(type).toUpperCase()}/>\n        }\n        else{\n            return <Fragment></Fragment>\n        }\n    }\n\n    return (\n        <RecorderContext.Consumer>\n            {({ crashData, limboData, diceData }) => (\n            <section className=\"text-gray-400 bg-gray-900 body-font w-full h-full\">\n                <div className=\"container px-5 py-24 mx-auto\">\n                    <div className=\"flex flex-col text-center w-full mb-20\"> \n                        <ToggleDraggable />\n                        <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-white\">\n                            Seed Recorder\n                        </h1>\n                        <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n                            The name says it for itself. Record results from gameplay...\n                        </p>\n                    </div>\n                    <div className=\"flex flex-wrap -m-4 text-center\">\n                        {Routes.map(r => {\n                            return (\n                                <Fragment key={r.path}>\n                                    {Array.isArray(r.childRoutes) && r.childRoutes.map(cr => {\n                                        const Icon = cr.icon\n                                        return (\n                                            <div key={cr.path} className=\"p-4 md:w-1/3 sm:w-1/2 w-full\">\n                                                <Link to={cr.path} className=\"border-2 border-gray-800 px-4 py-6 rounded-lg\">\n                                                    <Icon className=\"text-indigo-400 w-12 h-12 mb-3 inline-block\"/>\n                                                </Link>\n                                                <h2 className=\"title-font font-medium text-3xl text-white pt-3\">\n                                                    {(cr.name === 'Crash') ? crashData.count  : ((cr.name === 'Limbo') ? limboData.count : ((cr.name === 'Dice') ? diceData.count : 0)) }\n                                                </h2>\n                                                <p className=\"leading-relaxed\">{cr.name}</p>\n                                                {exportType((cr.name === 'Crash') ? crashData  : ((cr.name === 'Limbo') ? limboData : ((cr.name === 'Dice') ? diceData : {})), cr.name)}\n                                            </div>\n                                        )\n                                    })}\n                                </Fragment>\n                            )\n                        })}\n                    </div>\n                </div>\n            </section>\n            )}\n        </RecorderContext.Consumer>\n    )\n}\n\nexport default Main;","import React, { Fragment } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Routes from '../Components/Routes';\nimport ToggleDraggable from '../Components/Utils/ToggleDraggable';\n\nconst Header = () => {\n\n    return (\n        <header className=\"text-gray-400 bg-gray-900\">\n            <nav className=\"text-gray-400 bg-gray-900\">\n                <div className=\"container p-6 mx-auto\"> \n                    <ToggleDraggable />\n                    <Link className=\"block text-2xl font-bold text-center text-gray-800 dark:text-white lg:text-3xl hover:text-gray-700 dark:hover:text-gray-300\" to=\"/\">Seed Recorder</Link>\n                    <div className=\"flex items-center justify-center mt-6 text-gray-600 capitalize dark:text-gray-300\">\n                        {Routes.map(r => {\n                            return (\n                                <Fragment key={r.path}>\n                                    {Array.isArray(r.childRoutes) && r.childRoutes.map(cr => {\n                                        return (\n                                            <NavLink exact={true} activeClassName=\"border-b-2 border-indigo-400 text-indigo-400 font-bold\" className=\"title-font text-white mx-1.5 sm:mx-6\" key={cr.path} to={cr.path}>\n                                                {cr.name}\n                                            </NavLink>\n                                        )\n                                    })}\n                                </Fragment>\n                            )\n                        })}\n                    </div>\n                </div>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport Header from '../Components/Header';\n\nconst Layout = ({ children }) => {\n\n    return (\n        <section className=\"text-gray-400 bg-gray-900 body-font w-full h-full\">\n            <Header />\n            <div className=\"container px-2 py-2 mx-auto h-full overflow\">\n                { children }\n            </div>\n        </section>\n    )\n\n}\n\nexport default Layout;","import React, { Fragment } from 'react';\n\n\nexport const FormartHistory = ({ seedData, lastHistory, highLightX, customPayoutCalc = null}) => {\n    let historyResults = [];\n\n    for(let i = 0; i < seedData.count; i++){\n        let result = customPayoutCalc(seedData.list[i]?.stake_state?.result);\n        historyResults.push(Math.floor((result || 0) * 100) / 100)\n    }\n\n    return (\n        <HistoryPayout historyResults={historyResults} lastHistory={lastHistory} highLightX={highLightX} />\n    )\n}\n\nconst HistoryPayout = ({ historyResults, lastHistory, highLightX }) => {\n    let history = [], len = 0\n    for(let k in historyResults){\n        if(len === lastHistory)\n            break;\n        history.push(historyResults[k])\n        \n        len += 1\n    }\n    return (\n        <div className=\"mb-5\">\n            <h1 className=\"sm:text-1xl text-1xl font-medium title-font mb-3 text-white\">\n                Last {lastHistory} Results\n            </h1>\n            <div>\n                <table className=\"crash-table table text-gray-400 border-separate space-y-6 text-xs text-center\">\n                    <thead>\n                        <tr className=\"bg-gray-800\">\n                            <th className=\"p-1 text-gray\">Count</th>\n                            {history.map((val, index) => \n                                <Fragment key={index+'_history_results_head'}>\n                                    <th className=\"p-1 text-gray\">{index+1}</th>\n                                </Fragment>\n                            )}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className=\"bg-gray-800\">\n                            <td className=\"p-1 text-gray\">Payout</td>\n                            {history.map((val, index) => \n                                <Fragment key={index+'_history_results'}>\n                                    <td className={\"p-1 \"+(val >= highLightX ? 'bg-green-400 text-white' : '')}>{val}x</td>\n                                </Fragment>\n                            )}\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n\n}\n\nexport default HistoryPayout;","import React, { Fragment } from 'react';\n\n\nexport const FormatPayout = ({ seedData, targets, customPayoutCalc }) => {\n    let results = [], targetResults = [];\n\n    for(let i = 0; i < seedData.count; i++){\n        let result = customPayoutCalc(seedData.list[i]?.stake_state?.result);\n        results.push(Math.floor((result || 0) * 100) / 100)\n    }\n\n    for(let k = 0; k < targets.length; k++){\n        const target = targets[k];\n        let hits = 0;\n        for(let j in results){\n            if(results[j] >= target)\n                hits += 1;\n        }\n        const expectedHitRate = parseFloat((((100/target) * 0.99) / 100).toFixed(7));\n        const hitRate = parseFloat((hits / seedData.count).toFixed(7));\n        const expectedHits = parseFloat((expectedHitRate * seedData.count).toFixed(7));\n        const expectedHitsVsHits = parseFloat((hits - expectedHits).toFixed(7));\n        const expectedHitRateVsHitRate =  parseFloat((hitRate - expectedHitRate).toFixed(7));\n\n        targetResults[target] = {\n            expectedHitRate: expectedHitRate,\n            hitRate: hitRate,\n            expectedHits: expectedHits,\n            hits: hits,\n            expectedHitsVsHits: expectedHitsVsHits,\n            expectedHitRateVsHitRate: expectedHitRateVsHitRate\n        }\n    }\n\n    return <PayoutComparison targetResults={targetResults} targets={targets} sampleSize={seedData.count}/>\n}\n\nconst PayoutComparison = ({ targets, targetResults, sampleSize }) => {\n\n    const DrawPayoutTable = ({ chunk, multi }) => {\n        let init_count = 0, multi_count = 0\n        const headElem = (val, col) => <th colSpan={col} key={val+'_th'} className=\"p-1\">{val}x</th>\n        return (\n            <Fragment>\n                <div className=\"overflow-auto lg:overflow-visible mb-5\">\n                    <table className=\"crash-table table text-gray-400 border-separate space-y-6 text-xs text-center\">\n                        <thead className=\"bg-gray-800 text-gray-500\">\n                            <tr>\n                                <th className=\"p-1\">{chunk[0]}x to {chunk[chunk.length -1]}x</th>\n                                {chunk.map((val, index) => {\n                                    if(index === 0){\n                                        return headElem(val, multi)\n                                    }\n\n                                    init_count += 1\n                                    multi_count += 1\n                                    if (init_count === multi){\n                                        multi_count = 0\n                                        return headElem(val, 10)\n                                    }\n                                    if(multi_count === 10){\n                                        multi_count = 0\n                                        return headElem(val, 10)\n                                    }\n                                    return <Fragment key={val+'_th'}></Fragment>\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr className=\"bg-gray-800\">\n                                <td className=\"p-3\">Payout</td>\n                                {chunk.map((val, index) => {\n                                    return (\n                                        <td key={val+'_td_1'} className=\"td-ltr p-1\">{val}x</td>\n                                    )\n                                })}\n                            </tr>\n                            {/* <tr className=\"bg-gray-800\">\n                                <td className=\"p-1\">Exp Hits</td>\n                                {chunk.map((val, index) => {\n                                    return (\n                                        <td key={val+'_td_2'} className=\"td-ltr p-1\">{Math.round(targetResults[val]?.expectedHits) || 0}</td>\n                                    )\n                                })}\n                            </tr>\n                            <tr className=\"bg-gray-800\">\n                                <td className=\"p-1\">Act Hits</td>\n                                {chunk.map((val, index) => {\n                                    return (\n                                        <td key={val+'_td_3'} className=\"td-ltr p-1\">{Math.round(targetResults[val]?.hits) || 0}</td>\n                                    )\n                                })}\n                            </tr> */}\n                            <tr className=\"bg-gray-800\">\n                                <td className=\"p-1\">Variance</td>\n                                {chunk.map((val, index) => {\n                                    const res = Math.round(targetResults[val]?.expectedHitsVsHits) || 0\n                                    return (\n                                        <td key={val+'_td_4'} className={(res < 0 ? 'bg-red-500' : (res === 0 ? '' : 'bg-green-500')) +' text-white td-rt p-1'}>{res}</td>\n                                    )\n                                })}\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </Fragment>\n        )\n    }\n\n    const RenderTargets = () => {\n        const valuesList = [\n            {\n                list: targets.slice(0, 99),\n                multi: 9\n            },\n            {\n                list: targets.slice(99, 198),\n                multi: 8\n            },\n            {\n                list: targets.slice(198, 297),\n                multi: 9\n            }\n        ]\n\n        return (\n            <div>\n                <h1 className=\"sm:text-1xl text-1xl font-medium title-font mb-3 text-white\">\n                    Payouts Comparison - {sampleSize} Sample Size\n                </h1>\n                {valuesList.map((val, index) => \n                    <Fragment key={index+'_table'}><DrawPayoutTable chunk={val.list} multi={val.multi}/></Fragment>\n                )}\n            </div>\n        )\n    }\n\n    return <RenderTargets />\n}\n\nexport default PayoutComparison;","import React, { Fragment } from 'react';\n\nexport const targetList = [\n    1.01, 1.02, 1.03, 1.04, 1.05, 1.06, 1.07, 1.08, 1.09, 1.10, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.20, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.27, 1.28, 1.29, 1.30, 1.31, 1.32, 1.33, 1.34, 1.35, 1.36, 1.37, 1.38, 1.39, 1.40, 1.41, 1.42, 1.43, 1.44, 1.45, 1.46, 1.47, 1.48, 1.49, 1.50, 1.51, 1.52, 1.53, 1.54, 1.55, 1.56, 1.57, 1.58, 1.59, 1.60, 1.61, 1.62, 1.63, 1.64, 1.65, 1.66, 1.67, 1.68, 1.69, 1.70, 1.71, 1.72, 1.73, 1.74, 1.75, 1.76, 1.77, 1.78, 1.79, 1.80, 1.81, 1.82, 1.83, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.91, 1.92, 1.93, 1.94, 1.95, 1.96, 1.97, 1.98, 1.99,\n    2.00, 3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00, 11.00, 12.00, 13.00, 14.00, 15.00, 16.00, 17.00, 18.00, 19.00, 20.00, 21.00, 22.00, 23.00, 24.00, 25.00, 26.00, 27.00, 28.00, 29.00, 30.00, 31.00, 32.00, 33.00, 34.00, 35.00, 36.00, 37.00, 38.00, 39.00, 40.00, 41.00, 42.00, 43.00, 44.00, 45.00, 46.00, 47.00, 48.00, 49.00, 50.00, 51.00, 52.00, 53.00, 54.00, 55.00, 56.00, 57.00, 58.00, 59.00, 60.00, 61.00, 62.00, 63.00, 64.00, 65.00, 66.00, 67.00, 68.00, 69.00, 70.00, 71.00, 72.00, 73.00, 74.00, 75.00, 76.00, 77.00, 78.00, 79.00, 80.00, 81.00, 82.00, 83.00, 84.00, 85.00, 86.00, 87.00, 88.00, 89.00, 90.00, 91.00, 92.00, 93.00, 94.00, 95.00, 96.00, 97.00, 98.00, 99.00, 100.00,\n    110.00, 120.00, 130.00, 140.00, 150.00, 160.00, 170.00, 180.00, 190.00, 200.00, 210.00, 220.00, 230.00, 240.00, 250.00, 260.00, 270.00, 280.00, 290.00, 300.00, 310.00, 320.00, 330.00, 340.00, 350.00, 360.00, 370.00, 380.00, 390.00, 400.00, 410.00, 420.00, 430.00, 440.00, 450.00, 460.00, 470.00, 480.00, 490.00, 500.00, 510.00, 520.00, 530.00, 540.00, 550.00, 560.00, 570.00, 580.00, 590.00, 600.00, 610.00, 620.00, 630.00, 640.00, 650.00, 660.00, 670.00, 680.00, 690.00, 700.00, 710.00, 720.00, 730.00, 740.00, 750.00, 760.00, 770.00, 780.00, 790.00, 800.00, 810.00, 820.00, 830.00, 840.00, 850.00, 860.00, 870.00, 880.00, 890.00, 900.00, 910.00, 920.00, 930.00, 940.00, 950.00, 960.00, 970.00, 980.00, 990.00, 1000.00, 1500.00, 2000.00, 2500.00, 3000.00, 3500.00, 4000.00, 5000.00, 6000.00, 7000.00\n];\n\nexport const MaxStreak = () => {\n\n\n    return (\n        <Fragment>\n            \n        </Fragment>\n    )\n}","import React, { Fragment, useState } from 'react';\nimport { RecorderContext } from '../../Contexts/RecorderProvider';\nimport { FormartHistory } from '../Common/HistoryPayout';\nimport { FormatPayout } from '../Common/PayoutComparison';\nimport { targetList } from '../Common/Targets'\n\nconst RecentStats = () => {\n    const [targets] = useState(targetList)\n\n    const lastHistory = 100\n    const highLightX = 10\n\n    const customPayoutCalc = (result) => result\n\n    return (\n        <Fragment>\n            <RecorderContext.Consumer>\n            {({ limboData }) => (\n                <Fragment>\n                    <FormartHistory \n                        seedData={limboData} \n                        lastHistory={lastHistory} \n                        highLightX={highLightX} \n                        customPayoutCalc={customPayoutCalc} \n                    />\n                    <FormatPayout \n                        seedData={limboData} \n                        targets={targets} \n                        customPayoutCalc={customPayoutCalc} \n                    />\n                </Fragment>\n            )}\n            </RecorderContext.Consumer>\n        </Fragment>\n    )\n}\n\nexport default RecentStats;","import React from 'react';\nimport Layout from '../Layout';\nimport RecentStats from './RecentStats';\n\nconst Limbo = () => {\n    return (\n        <Layout> \n            <RecentStats />\n        </Layout>\n    )\n}\n\nexport default Limbo;","import React, { Fragment, useState } from 'react';\nimport { RecorderContext } from '../../Contexts/RecorderProvider';\nimport { FormartHistory } from '../Common/HistoryPayout';\nimport { FormatPayout } from '../Common/PayoutComparison';\n\nconst RecentStats = () => {\n    const [targets] = useState([\n        1.01, 1.02, 1.03, 1.04, 1.05, 1.06, 1.07, 1.08, 1.09, 1.10, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.20, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.27, 1.28, 1.29, 1.30, 1.31, 1.32, 1.33, 1.34, 1.35, 1.36, 1.37, 1.38, 1.39, 1.40, 1.41, 1.42, 1.43, 1.44, 1.45, 1.46, 1.47, 1.48, 1.49, 1.50, 1.51, 1.52, 1.53, 1.54, 1.55, 1.56, 1.57, 1.58, 1.59, 1.60, 1.61, 1.62, 1.63, 1.64, 1.65, 1.66, 1.67, 1.68, 1.69, 1.70, 1.71, 1.72, 1.73, 1.74, 1.75, 1.76, 1.77, 1.78, 1.79, 1.80, 1.81, 1.82, 1.83, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.90, 1.91, 1.92, 1.93, 1.94, 1.95, 1.96, 1.97, 1.98, 1.99,\n        2.00, 3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00, 11.00, 12.00, 13.00, 14.00, 15.00, 16.00, 17.00, 18.00, 19.00, 20.00, 21.00, 22.00, 23.00, 24.00, 25.00, 26.00, 27.00, 28.00, 29.00, 30.00, 31.00, 32.00, 33.00, 34.00, 35.00, 36.00, 37.00, 38.00, 39.00, 40.00, 41.00, 42.00, 43.00, 44.00, 45.00, 46.00, 47.00, 48.00, 49.00, 50.00, 51.00, 52.00, 53.00, 54.00, 55.00, 56.00, 57.00, 58.00, 59.00, 60.00, 61.00, 62.00, 63.00, 64.00, 65.00, 66.00, 67.00, 68.00, 69.00, 70.00, 71.00, 72.00, 73.00, 74.00, 75.00, 76.00, 77.00, 78.00, 79.00, 80.00, 81.00, 82.00, 83.00, 84.00, 85.00, 86.00, 87.00, 88.00, 89.00, 90.00, 91.00, 92.00, 93.00, 94.00, 95.00, 96.00, 97.00, 98.00, 99.00, 100.00,\n        110.00, 120.00, 130.00, 140.00, 150.00, 160.00, 170.00, 180.00, 190.00, 200.00, 210.00, 220.00, 230.00, 240.00, 250.00, 260.00, 270.00, 280.00, 290.00, 300.00, 310.00, 320.00, 330.00, 340.00, 350.00, 360.00, 370.00, 380.00, 390.00, 400.00, 410.00, 420.00, 430.00, 440.00, 450.00, 460.00, 470.00, 480.00, 490.00, 500.00, 510.00, 520.00, 530.00, 540.00, 550.00, 560.00, 570.00, 580.00, 590.00, 600.00, 610.00, 620.00, 630.00, 640.00, 650.00, 660.00, 670.00, 680.00, 690.00, 700.00, 710.00, 720.00, 730.00, 740.00, 750.00, 760.00, 770.00, 780.00, 790.00, 800.00, 810.00, 820.00, 830.00, 840.00, 850.00, 860.00, 870.00, 880.00, 890.00, 900.00, 910.00, 920.00, 930.00, 940.00, 950.00, 960.00, 970.00, 980.00, 990.00, 1000.00, 1500.00, 2000.00, 2500.00, 3000.00, 3500.00, 4000.00, 5000.00, 9900.00\n    ])\n\n    const lastHistory = 100\n    const highLightX = 10\n\n    const roundTarget = (value, decimals) => {\n        let dec    = decimals - 1;\n        let dec2   = 10 / (10 * dec);\n        let output = value - ((value * 100) % dec2) / 100;\n        return output;\n    }\n\n    const customPayoutCalc = (result) => (roundTarget(100 / result, 2))\n\n    return (\n        <Fragment>\n            <RecorderContext.Consumer>\n            {({ diceData }) => (\n                <Fragment>\n                    <FormartHistory \n                        seedData={diceData} \n                        lastHistory={lastHistory} \n                        highLightX={highLightX} \n                        customPayoutCalc={customPayoutCalc}\n                    />\n                    <FormatPayout \n                        seedData={diceData} \n                        targets={targets} \n                        customPayoutCalc={customPayoutCalc} \n                    />\n                </Fragment>\n            )}\n            </RecorderContext.Consumer>\n        </Fragment>\n    )\n}\n\nexport default RecentStats;","import React from 'react';\nimport Layout from '../Layout';\nimport RecentStats from './RecentStat';\n\nconst Dice = () => {\n    return (\n        <Layout> \n            <RecentStats/>\n        </Layout>\n    )\n}\n\nexport default Dice;","import CryptoJS from 'crypto-js';\n\nclass CrashResults{\n\n    constructor(clientSeed, serverSeed, fisrtNonce, lastNonce, targets){\n        this.clientSeed = clientSeed || '';\n        this.serverSeed = serverSeed || '';\n        this.targets = targets || [];\n        this.results = {};\n        this.targetResults = {};\n        this.nonces = Array.from({length: (lastNonce - fisrtNonce)}, (v, k) => k+1);\n    }   \n\n\n    async generateResults(serverSeed, clientSeed){\n        return await new Promise((resolve, reject) => {\n            let hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, serverSeed);\n            let r = hmacHasher.finalize(clientSeed).toString();\n            let i = parseInt(r.substr(0, 8), 16);\n            let a = Math.max(1, Math.pow(2, 32) / (i + 1) * .99);\n            let finalResult = (Math.floor(100 * a) / 100);\n            resolve(finalResult);\n        });\n    }\n\n\n    async simulateTargets() {\n        let nonce_len = this.nonces.length;\n        let lastHash = '', hash = this.serverSeed\n        for(let i = 0; i < nonce_len; i++){\n            const nonce = this.nonces[i];\n            let gamehash = (lastHash !== '' ? CryptoJS.SHA256(lastHash).toString() : hash);\n            let currentResult = await this.generateResults(gamehash, this.clientSeed);\n            this.results[nonce] = currentResult;\n            lastHash = gamehash;\n        }\n\n        for(let k = 0; k < this.targets.length; k++){\n            const target = this.targets[k];\n            let hits = 0;\n            for(let j in this.results){\n                if(this.results[j] >= target)\n                    hits += 1;\n            }\n            const expectedHitRate = parseFloat((((100/target) * 0.99) / 100).toFixed(7));\n            const hitRate = parseFloat((hits / nonce_len).toFixed(7));\n            const expectedHits = parseFloat((expectedHitRate * nonce_len).toFixed(7));\n            const expectedHitsVsHits = parseFloat((hits - expectedHits).toFixed(7));\n            const expectedHitRateVsHitRate =  parseFloat((hitRate - expectedHitRate).toFixed(7));\n\n            this.targetResults[target] = {\n                expectedHitRate: expectedHitRate,\n                hitRate: hitRate,\n                expectedHits: expectedHits,\n                hits: hits,\n                expectedHitsVsHits: expectedHitsVsHits,\n                expectedHitRateVsHitRate: expectedHitRateVsHitRate\n            }\n        }\n    }\n}\n\nexport default CrashResults","import React, { useState, useEffect, Fragment } from 'react';\nimport CrashResults from '../Utils/CrashResults';\nimport { RecorderContext } from '../../Contexts/RecorderProvider';\nimport HistoryPayout from '../Common/HistoryPayout'\nimport PayoutComparison from '../Common/PayoutComparison';\nimport { targetList } from '../Common/Targets'\n\nconst RecentStats = () => {\n    const [serverSeed, setServerSeed] = useState('3de7306e8de178b5f4de0a6eac3635c29b6143d638f8ecdb4bf691e8f9a2ee6a')\n    const [clientSeed] = useState('0000000000000000001b34dc6a1e86083f95500b096231436e9b25cbdd0075c4')\n    const [firstNonce] = useState(0)\n    const [lastNonce] = useState(25000)\n    const [results, setResults] = useState(null)\n\n    //state info\n    const [targetResults, setTargetResults] = useState({})\n    const [historyResults, setHistoryResults] = useState([])\n    const [targets] = useState(targetList)\n\n    //misc\n    const lastHistory = 100\n    const highLightX = 10\n\n    //form\n    const [isLoading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setLoading(true)\n        setResults(new CrashResults(clientSeed, serverSeed, firstNonce, lastNonce, targets))\n    }, [serverSeed, clientSeed, firstNonce, lastNonce, targets])\n\n    useEffect(() => {\n        (async function() {\n            if(results !== null){\n                await results.simulateTargets()\n                setTargetResults(results.targetResults)\n                setHistoryResults(results.results)\n                setLoading(false)\n            }\n        })()\n    }, [results])\n\n    return (\n        <RecorderContext.Consumer>\n            {({ currentCrash, setCurrentCrash }) => (\n            <div>\n                <div className=\"flex w-full\">\n                    <div className=\"m-1 flex w-full mb-5\">\n                        <input \n                            className=\"rounded-l-lg p-2 border-t mr-0 border-b text-sm border-l text-gray-800 border-gray-200 bg-white h-8 w-full\" \n                            value={currentCrash} \n                            onChange={(event) => {\n                                setCurrentCrash(event.target.value)\n                            }} \n                            placeholder=\"Sever seed\"\n                        />\n                        <button \n                            disabled={isLoading}\n                            className=\"px-2 rounded-r-lg bg-indigo-400 text-sm text-white font-bold p-1 uppercase h-8\"\n                            onClick={() => setServerSeed(currentCrash)}\n                        >Generate</button>\n                    </div>\n                </div>\n                {results !== null && (targetResults || {}) !== {} && (\n                    <Fragment>\n                        <HistoryPayout historyResults={historyResults} lastHistory={lastHistory} highLightX={highLightX} />\n                        <PayoutComparison targetResults={targetResults} targets={targets} sampleSize={Object.keys(historyResults).length} />\n                    </Fragment>\n                )}\n                {(results === null || (targetResults || {}) === {}) && (\n                    <div className=\"overflow-auto lg:overflow-visible p-2 mb-3\">\n                        No seed data generated.\n                    </div>\n                )}\n            </div>\n            )}\n        </RecorderContext.Consumer>\n    )\n}\n\nexport default RecentStats;","import React from 'react';\nimport Layout from '../Layout';\nimport RecentStats from './RecentStats';\n\nconst Crash = () => {\n    \n\n    return (\n        <Layout> \n            <RecentStats />\n        </Layout>\n    )\n}\n\nexport default Crash;","import Main from '../Components/Main';\nimport Limbo from '../Components/Limbo/Index';\nimport Dice from '../Components/Dice/Index';\nimport Crash from '../Components/Crash/Index';\nimport { GiCrackedBallDunk } from 'react-icons/gi';\nimport { GiAmplitude } from 'react-icons/gi';\nimport { GiDiceSixFacesSix } from 'react-icons/gi';\n\nconst Routes = [\n    {\n        path: '/',\n        component: Main,\n        name: 'Home',\n        childRoutes: [\n            {\n                path: '/limbo',\n                component: Limbo,\n                name: 'Limbo',\n                icon: GiAmplitude\n            },\n            {\n                path: '/dice',\n                component: Dice,\n                name: 'Dice',\n                icon: GiDiceSixFacesSix\n            },\n            {\n                path: '/crash',\n                component: Crash,\n                name: 'Crash',\n                icon: GiCrackedBallDunk\n            }\n        ]\n    }\n]\n\nexport default Routes;","import React from 'react';\n\nclass ErrorLog extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { error: null, errorInfo: null };\n    }\n    \n    componentDidCatch(error, errorInfo) {\n      // Catch errors in any components below and re-render with error message\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      })\n      // You can also log error messages to an error reporting service here\n    }\n    \n    render() {\n      if (this.state.errorInfo) {\n        // Error path\n        return (\n          <div>\n            <h2>Something went wrong.</h2>\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </details>\n          </div>\n        );\n      }\n      // Normally, just render children\n      return this.props.children;\n    }  \n}\n\nexport default ErrorLog;","import React, { Fragment, useEffect, useState } from 'react';\nimport { Rnd } from 'react-rnd';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Routes from '../Components/Routes';\nimport ErrorLog from './Utils/ErrorLog';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nconst Modal = () => {\n  const [maxWidth, setMaxWidth] = useState(Number.MAX_SAFE_INTEGER)\n  const [maxHeight, setMaxHeight] = useState(Number.MAX_SAFE_INTEGER)\n\n  useEffect(() => {\n    setMaxWidth(document.body.clientWidth-5)\n    setMaxHeight(document.body.clientHeight-5)\n    window.addEventListener(\"resize\", function(event) {\n      setMaxWidth(document.body.clientWidth-5)\n      setMaxHeight(document.body.clientHeight-5)\n    });\n  }, []);\n\n  const style = (hideView) => ({\n    display: hideView ? \"none\" : \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  });\n\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId, disableDrag, hideView }) => (\n        <ErrorLog>\n          <Rnd\n            style={style(hideView)}\n            default={{\n              x: windowPosition.x,\n              y: windowPosition.y,\n              width: 480,\n              height: 480\n            }}\n            className=\"border-solid border-4 border-indigo-400\"\n            disableDragging={disableDrag}\n            maxWidth={maxWidth}\n            maxHeight={maxHeight}\n          >\n            <div className=\"text-gray-400 bg-gray-900 w-full h-full overflow-scroll\">\n              <Router>\n                <Switch>\n                  {Routes.map(r => {\n                    return (\n                      <Fragment key={r.path}>\n                        <Route exact path={r.path}>\n                          {r.component()}\n                        </Route>\n                        {Array.isArray(r.childRoutes) && r.childRoutes.map(cr => {\n                          return (\n                            <Route key={cr.path} path={cr.path}>\n                              {cr.component()}\n                            </Route>\n                          )\n                        })}\n                      </Fragment>\n                    )\n                  })}\n                </Switch>\n              </Router>\n            </div>\n          </Rnd>\n        </ErrorLog>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import { CrashModel } from './Crash'\nimport { LimboModel } from './Limbo'\nimport { DiceModel } from './Dice'\n\nexport const DBConfig = {\n    name: 'SeedRecorder',\n    version: 1,\n    objectStoresMeta: [\n        CrashModel,\n        LimboModel,\n        DiceModel\n    ]\n};","import React from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\nimport RecorderProvider from './Contexts/RecorderProvider';\nimport { DBConfig } from './Model/Index';\nimport { initDB } from 'react-indexed-db';\n\ninitDB(DBConfig);\n\n/**\n * @return {null}\n */\nfunction App() {\n  return (\n    <RecorderProvider>\n      <ModalProvider>\n        <Modal />\n      </ModalProvider>\n    </RecorderProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>, document.getElementById('seed-recorder-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}